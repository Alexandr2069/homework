1.  Замыкание по-моему можно заменить в объектах:
     a. в settings объект settings можно заменить на функцию и использовать замыкание. 
     b. в status можно использовать замыкание.
     c. в food - рассмотрели на уроке.

2. a. 
     if (!("a" in window)) {
                  var a = 1;
     }
     alert(a);

 //в условии  указано что "a" не принадлежит области window (точнее выражение что "а" in window является false), т.е. "а" не  //определено в window, alert должна вывести undefinded т.к. выполняется за пределами условия в window и var a =1 ей не  //видно.
   
   b.
     var b = function a(x) {
             x && a(--x);
     };
     alert(a);

  // здесь как в уроке комбо, внутри функции "а" может быть видна , но за пределами функции  "а" ничего не значит, 
  // будет ошибка или указано что "а" не определена.
   
   c.
    function a(x) {
         return x * 2;
    }
    var a;
    alert(a);  
   
    // В этом задание используется function declaration, но функция не вызвана потому что "var a;" это объявление переменной    // и  alert(a) выведет undefinded.   

   d.
    function b(x, y, a) {
           arguments[2] = 10;
            alert(a);
    }
    b(1, 2, 3);
   
   // В этом задание используется function declaration и в ней три параметра , вызывается она после объявления с аргументами
   // 1,2,3 , но в теле функции последнему аргументу присваивается  значение 10 и alert выведет 10.

   e.
    function a() {
        alert(this);
    }
    a.call(null);
    
    // здесь вызов функции  с передачей контекста с аргументом null, что является передачей без аргумента и как вы сказали в     //уроке в этом случае контекст будет window, т.е. как написано в презентации this будет window, т.к. вызов происходит в      // контексте window  и если console.log в данном случае вывело бы что функция является object window, то alert выведет       //то же самое.
    
   



        
     